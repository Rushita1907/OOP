OOP 12th Practical 

/*
Practical Title: 12.Write a cpp program to define virtual function ( run time polymorphism).
Name: Samarth Kuwar
Roll Number: 06
Batch: S1
Academic Year: 2023-2024
*/

#include <iostream>
using namespace std;
class Shape {
public:
// Usage of virtual constructor
virtual void calculate()
{
cout << "Area of your Shape ";
}
virtual ~Shape()
{
cout << "Shape Destuctor Call\n";
}
};
// Declaration of Derived class
class Rectangle : public Shape {
public:
int width, height, area;
void calculate()
{
cout << "Enter Width of Rectangle: ";
cin >> width;
cout << "Enter Height of Rectangle: ";
cin >> height;
area = height * width;
cout << "Area of Rectangle: " << area << "\n";
}
// Virtual Destuctor for every Derived class
virtual ~Rectangle()
{
cout << "Rectangle Destuctor Call\n";
}
};
class Square : public Shape {
public:
int side, area;
void calculate()
{
cout << "Enter one side your of Square: ";
cin >> side;
area = side * side;
cout << "Area of Square: " << area << "\n";
}
// Virtual Destuctor for every Derived class
virtual ~Square()
{
cout << "Square Destuctor Call\n";
}
};
int main()
{
Shape* S;
Rectangle r;
S = &r;
S->calculate();
Square sq;
// initialization of reference variable
S = &sq;
// calling of Square function
S->calculate();
return 0;
}


OUTPUT

Enter Width of Rectangle: 5
Enter Height of Rectangle: 7
Area of Rectangle: 35
Enter one side your of Square: 5
Area of Square: 25
Square Destuctor Call
Shape Destuctor Call
Rectangle Destuctor Call
Shape Destuctor Call
